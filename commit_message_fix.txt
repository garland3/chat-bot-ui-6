fix: Resolve Alpine.js component initialization and HTML corruption issues

**Major Fixes:**

1. **Fixed HTML Structure Corruption**
   - Restored corrupted viewport meta tag that was mixed with Alpine.js dropdown code
   - Removed duplicate data source dropdown (kept Alpine.js version, removed vanilla JS)

2. **Resolved JavaScript Errors**
   - Fixed "this.updateLLMDisplay is not a function" by removing deprecated method calls
   - Fixed "Cannot set properties of undefined" by removing references to non-existent DOM elements
   - Updated loadLLMConfigs() to work with Alpine.js component system

3. **Improved Component Initialization**
   - Reduced console spam from API service retry attempts 
   - Added retry attempt counter to limit noisy console messages
   - Improved timing for API service availability checks
   - Faster retry intervals (200ms vs 500ms) for better responsiveness

4. **Updated Migration Status**
   - All dropdowns now use Alpine.js (Tools, Data Sources, LLM selection)
   - Removed remaining vanilla JS dropdown code and event handlers
   - Global app instance and API service properly exposed for Alpine.js components

**Current State:**
- Connection status updates properly via WebSocket ✅
- All dropdowns functional with Alpine.js ✅ 
- No JavaScript errors during initialization ✅
- Reduced console logging noise ✅
- Data sources and LLMs load correctly ✅

**Remaining Items (tracked in GitHub issue):**
- Investigate multiple component initialization instances
- Optimize initialization timing further
- Complete cleanup of deprecated code

This resolves the immediate blocking issues and restores full functionality
while maintaining the Alpine.js migration progress.
